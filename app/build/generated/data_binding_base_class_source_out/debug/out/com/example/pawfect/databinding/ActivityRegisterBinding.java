// Generated by view binder compiler. Do not edit!
package com.example.pawfect.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.pawfect.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText editConfirmPassword;

  @NonNull
  public final TextInputEditText editEmail;

  @NonNull
  public final TextInputEditText editPassword;

  @NonNull
  public final Button googleButton;

  @NonNull
  public final TextInputLayout inputConfirmPassword;

  @NonNull
  public final TextInputLayout inputEmail;

  @NonNull
  public final TextInputLayout inputPassword;

  @NonNull
  public final LottieAnimationView registerAnimation;

  @NonNull
  public final Button registerButton;

  @NonNull
  public final Toolbar toolbar;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText editConfirmPassword, @NonNull TextInputEditText editEmail,
      @NonNull TextInputEditText editPassword, @NonNull Button googleButton,
      @NonNull TextInputLayout inputConfirmPassword, @NonNull TextInputLayout inputEmail,
      @NonNull TextInputLayout inputPassword, @NonNull LottieAnimationView registerAnimation,
      @NonNull Button registerButton, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.editConfirmPassword = editConfirmPassword;
    this.editEmail = editEmail;
    this.editPassword = editPassword;
    this.googleButton = googleButton;
    this.inputConfirmPassword = inputConfirmPassword;
    this.inputEmail = inputEmail;
    this.inputPassword = inputPassword;
    this.registerAnimation = registerAnimation;
    this.registerButton = registerButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_confirm_password;
      TextInputEditText editConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (editConfirmPassword == null) {
        break missingId;
      }

      id = R.id.edit_email;
      TextInputEditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.edit_password;
      TextInputEditText editPassword = ViewBindings.findChildViewById(rootView, id);
      if (editPassword == null) {
        break missingId;
      }

      id = R.id.google_button;
      Button googleButton = ViewBindings.findChildViewById(rootView, id);
      if (googleButton == null) {
        break missingId;
      }

      id = R.id.input_confirm_password;
      TextInputLayout inputConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmPassword == null) {
        break missingId;
      }

      id = R.id.input_email;
      TextInputLayout inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.input_password;
      TextInputLayout inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.register_animation;
      LottieAnimationView registerAnimation = ViewBindings.findChildViewById(rootView, id);
      if (registerAnimation == null) {
        break missingId;
      }

      id = R.id.register_button;
      Button registerButton = ViewBindings.findChildViewById(rootView, id);
      if (registerButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, editConfirmPassword,
          editEmail, editPassword, googleButton, inputConfirmPassword, inputEmail, inputPassword,
          registerAnimation, registerButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
